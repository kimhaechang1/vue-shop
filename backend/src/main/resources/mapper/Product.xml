<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.khc.shop.product.model.mapper.ProductMapper">
    <resultMap id="product" type="productDto">
        <result column="product_id" property="productId"></result>
        <result column="product_name" property="productName"></result>
        <result column="product_img" property="productImg"></result>
        <result column="product_brand_name" property="productBrand"></result>
        <result column="product_description" property="productDescription"></result>
        <result column="product_cost" property="productCost"></result>
    </resultMap>

    <resultMap id="productWH" type="productWHDto">
        <result column="product_id" property="productId"></result>
        <result column="product_code" property="productCode"></result>
        <result column="product_size" property="productSize"></result>
        <result column="product_date" property="productDate"></result>
    </resultMap>

    <resultMap id="productInfo" type="productInfoDto">
        <result column="product_id" property="productId"></result>
        <result column="product_name" property="productName"></result>
        <result column="product_img" property="productImg"></result>
        <result column="product_brand_name" property="productBrand"></result>
        <result column="product_description" property="productDescription"></result>
        <result column="product_code" property="productCode"></result>
        <result column="product_size" property="productSize"></result>
        <result column="product_date" property="productDate"></result>
    </resultMap>

    <resultMap id="productBrand" type="productBrandDto">
        <result column="product_brand_id" property="productBrandId"></result>
        <result column="product_brand_name" property="productBrandName"></result>
    </resultMap>

    <sql id="searchProduct">
        <if test='brand != null and !"".equals(brand)'>
            AND product_brand LIKE CONCAT('%','${brand}','%')
        </if>
        <if test='word!=null and !"".equals(word)'>
            AND product_name LIKE CONCAT('%','${word}','%')
        </if>
    </sql>

    <sql id="searchProductItem">
        <if test='size!=null and !"".equals(size)'>
            AND product_size = ${size}
        </if>
    </sql>

    <sql id="limit">
        <if test='start != null and !"".equals(start) and offset != null and !"".equals(offset)'>
            LIMIT ${start}, ${offset}
        </if>
    </sql>

    <select id="getProductList" parameterType="map" resultMap="product">
        SELECT
            product_id, product_name, product_img, product_brand_name, product_cost
        FROM product LEFT JOIN  product_brand
        ON product.product_brand = product_brand.product_brand_id
        WHERE 1 = 1
        <include refid="searchProduct"></include>
        <include refid="limit"></include>
    </select>
    <select id="getProductCount" parameterType="map" resultType="int">
        SELECT
            COUNT(product_id)
        FROM product
        WHERE 1=1
        <include refid="searchProduct"></include>
    </select>

    <insert id="insertProduct" parameterType="productDto">
        INSERT INTO product
            (product_name, product_img, product_brand, product_description)
        VALUES ('${productName}', '${productImg}', '${productBrand}', '${productDescription}')
        <selectKey keyProperty="productId" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>

    <insert id="insertProductItem" parameterType="productWHDto">
        INSERT INTO product_warehouse
            (product_code, product_id, product_size)
        VALUES ('${productCode}', ${productId}, ${productSize})
    </insert>

    <select id="getProductWHCountByProductId" parameterType="map" resultType="int">
        SELECT COUNT(product_code)
        FROM product_warehouse
        WHERE product_id = ${productId}
        <include refid="searchProductItem"></include>
    </select>

    <select id="getProductWHListByProductId" parameterType="map" resultMap="productWH">
        SELECT product_code, product_id, product_size, product_date
        FROM product_warehouse
        WHERE product_id = ${productId}
        <include refid="searchProductItem"></include>
    </select>

    <select id="getProductIdbyProductName" parameterType="String" resultType="java.lang.Integer">
        SELECT product_id
        FROM product
        WHERE product_name = '${productName}'
    </select>

    <select id="searchProductByCode" parameterType="String" resultMap="productInfo">
        SELECT
            p.product_id, p.product_name, p.product_img, b.product_brand_name, p.product_description, d.product_code, d.product_size, d.product_date
        FROM product_warehouse d INNER JOIN product p
        on d.product_id = p.product_id
        LEFT JOIN product_brand b
        on p.product_brand = d.product_brand_id
        where product_code = '${productCode}'
    </select>

    <update id="updateProduct" parameterType="productDto">
        UPDATE
            product
        SET product_name = '${productName}', product_img = '${productImg}', product_brand = '${productBrand}', product_description = '${productDescription}'
        WHERE product_id = '${productId}'
    </update>

    <update id="updateProductItem" parameterType="productWHDto">
        UPDATE
            product_warehouse
        SET product_id = '${productId}', product_size = '${productSize}'
        WHERE product_code = '${productCode}'
    </update>

    <select id="getProductCountByProductId" parameterType="int">
        SELECT
            COUNT(product_id)
        FROM product
        WHERE product_id = ${productId}
    </select>

    <delete id="deleteProduct" parameterType="int">
        DELETE
        FROM product
        WHERE product_id = ${productId}
    </delete>
    <delete id="deleteProductItem" parameterType="String">
        DELETE
        FROM product_warehouse
        WHERE product_code = '${productCode}'
    </delete>
    <select id="countByBrandName" parameterType="String" resultType="java.lang.Integer">
        SELECT
            COUNT(product_brand_id)
        FROM
            product_brand
        where product_brand_name like CONCAT('%','${productBrandName}','%')
    </select>
    <insert id="insertBrand" parameterType="productBrandDto" >
        INSERT INTO product_brand
            (product_brand_name)
        VALUES ('${productBrandName}')
    </insert>
    <select id="getBrandList" resultMap="productBrand">
        SELECT
            product_brand_id, product_brand_name
        FROM
            product_brand
        WHERE
            1=1
    </select>
    <update id="updateBrand" parameterType="productBrandDto">
        UPDATE
            product_brand
        SET
            product_brand_name = '${productBrandName}'
        WHERE
            product_brand_id = '${productBrandId}'
    </update>
    <select id="getProductBrandNameByBrandId" parameterType="String" resultType="String">
        SELECT
            product_brand_name
        FROM
            product_brand
        WHERE
            1=1 AND product_brand_id = '${productBrandId}'
    </select>

    <delete id="deleteBrand" parameterType="String">
        DELETE
        FROM product_brand
        WHERE product_brand_id ='${productBrandId}'
    </delete>
</mapper>
